# -*- coding: utf-8 -*-
"""project2grutestscript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rDgiWz5zb5XGmcfq9U6cKsGPeCAQWgUe
"""

from google.colab import drive
drive.mount('/content/drive')

import tensorflow as tf 
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint
from keras.layers import LSTM
import os
import pathlib
import json

# raw_data = np.load('/content/drive/MyDrive/Robot_Trials_DL.npy')
# np.random.seed(0)
# np.random.shuffle(raw_data)
# data_train = raw_data[0 : int(0.6 * np.shape(raw_data)[0])]
# convert1, convert2, convert3 = data_train.shape[0], data_train.shape[1], data_train.shape[2]
# data_train = data_train.reshape(convert1*convert2, convert3)
# scaler = MinMaxScaler()
# scaler.fit(data_train[:, (0,2,3,4,5,6)])
# data_train_x = data_train[:, :, (0, 2, 3, 4, 5, 6)]
# data_train_y = data_train[:, :, 1:2]

data_test = np.load('/content/drive/MyDrive/Robot_Trials_DL_Test_30pct.npy')
np.random.seed(0)
np.random.shuffle(data_test)
convert7, convert8, convert9 = data_test.shape[0], data_test.shape[1], data_test.shape[2]
data_test = data_test.reshape(convert7*convert8, convert9)
scaler = MinMaxScaler()
scaler.fit(data_test[:, (0,2,3,4,5,6)])
data_test[:, (0,2,3,4,5,6)] = scaler.transform(data_test[:, (0,2,3,4,5,6)])
data_test = data_test.reshape(convert7, convert8, convert9)
data_test_x = data_test[:, :, (0, 2, 3, 4, 5, 6)]
data_test_y = data_test[:, :, 1:2]

newmodel = tf.keras.models.load_model('model.h5')
newmodel.evaluate(data_test_x, data_test_y, batch_size = 50, verbose = 1)
result = newmodel.predict(data_test_x)
plt.plot(result[0, :], 'r-', label = 'prediction')
plt.plot(data_test_y[0, :], 'b-', label = 'label')
plt.legend()
plt.show()